{"version":3,"sources":["media/alien.png","components/Header.js","components/Login.js","scripts/userFactory.js","components/SignUp.js","media/up-arrow.png","media/up-arrow-liked.png","media/down-arrow.png","media/down-arrow-hate.png","scripts/formatTime.js","components/Comment.js","scripts/commentFactory.js","components/Post.js","scripts/postFactory.js","components/Feed.js","media/404.png","components/User.js","components/Group.js","components/Groups.js","components/PageNotFound.js","App.js","index.js"],"names":["Header","props","useState","names","groups","setGroups","useEffect","firebase","firestore","collection","get","then","querySnapShot","userRef","tempGroups","forEach","x","push","id","user","className","to","map","name","toUpperCase","alt","src","logo","displayName","onClick","auth","signOut","setUser","window","location","reload","Login","onSubmit","e","preventDefault","form","target","setPersistence","Auth","Persistence","SESSION","signInWithEmailAndPassword","value","userCredential","catch","error","querySelector","textContent","message","console","log","type","required","userFactory","email","likes","hates","SignUp","password","arr","docs","doc","data","toLowerCase","includes","checkIfUniqueUserName","result","createUserWithEmailAndPassword","updateProfile","newUser","setUserRef","set","onChange","warning","document","button","disabled","minLength","formatTime","time","Math","floor","Comment","comment","setLikes","liked","setLiked","hated","setHated","timeNow","Date","getTime","data-id","tempComment","JSON","parse","stringify","allComments","tempAllComments","setAllComments","tempUser","filter","setCommentPoints","commentPoints","UpArrowLiked","upArrow","downArrowHate","downArrow","timestamp","content","commentFactory","post","Post","comments","setComments","shouldDisplayComments","setShouldDisplayComments","Object","keys","key","prevState","tempPost","allPosts","tempAllPosts","setAllPosts","setPostPoints","postPoints","upArrowLiked","group","title","image","href","rel","length","newComment","children","add","placeholder","postFactory","Feed","posts","setPosts","shouldDisplayForm","setShouldDisplayForm","shouldDisplayPicForm","setShouldDisplayPicForm","tempPosts","joinPost","firstPost","allGroups","newPost","img","storage","ref","child","files","put","getDownloadURL","url","size","style","accept","User","doesUserExist","setDoesUserExist","userPosts","setUserPosts","userComments","setUserComments","useParams","displayUser","tempPostPoints","tempComments","tempCommentPoints","Group","userGroups","setUserGroups","groupName","tempUserGroups","alert","Groups","joinGroup","parentNode","dataset","leaveGroup","data-name","description","groupDescription","setAllGroups","maxLength","PageNotFound","App","initialUser","sessionStorage","exact","path","render","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.301fdb92.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alien.3afe0b15.png\";","import '../styles/Header.css';\nimport logo from '../media/alien.png';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst Header = (props) => {\n\n  const [groups, setGroups] = useState({names: []});\n\n  const logOut = () => {\n    firebase.auth().signOut().then(() => {\n      props.setUser(null);\n      window.location.reload();\n    });\n  };\n  \n  useEffect(() => {\n    firebase.firestore().collection('groups').get().then((querySnapShot) => {\n      if (props.userRef) {\n        setGroups({ names: props.userRef.groups });\n      } else {\n        let tempGroups = [];\n        querySnapShot.forEach((x) => {\n          tempGroups.push(x.id);\n        });\n        setGroups({names: tempGroups})\n      };\n    })\n  }, [props.user, props.userRef]);\n  \n  return (\n    <div className='header'>\n      <div className='group-list'>\n        <span className='my-groups'>MY GROUPS: </span>\n        <div className='groups'>\n          <Link to='/groups/all'>ALL</Link>\n          {groups.names.map((name) => {\n          return <Link key={`header${name}`}to={`/groups/${name}`}>{name.toUpperCase()}</Link>\n        })}\n        </div>\n        <Link className='more-groups' to={`/groups`}>{'MORE>>'}</Link>\n      </div>\n      <div className='header-main'>\n        <Link className='page-title' to='/'>\n          <img className='logo' alt='logo' src={logo} />\n          readit\n        </Link>\n        <div className='buttons'>\n          {!props.user && <Link to='/login'><button className='login-btn btn'>Login</button></Link>}\n          {props.user && <Link className='user-name' to={`/user/${props.user.displayName}`}>{props.user.displayName}</Link>}\n          {props.user && <Link to='/'><button onClick={logOut}className='log-out-btn btn'>Log out</button></Link>}\n          {!props.user && <Link to='/signup'><button className='sign-up-btn btn'>Sign up</button></Link>}\n        </div>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Header;","import '../styles/Login.css';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = (props) => {\n\n  if (props.user) {\n    return <Redirect to='/' />;\n  };\n\n  const signIn = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n    .then(() => {\n      firebase.auth().signInWithEmailAndPassword(form[0].value, form[1].value)\n        .then((userCredential) => {\n          props.setUser(userCredential.user);\n      }).catch((error) => {\n        const warning = form.querySelector('.warning');// Not supposed to mainipulate DOM\n        warning.textContent = error.message;\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  };\n    \n  return (\n    <form className='login-form' onSubmit={signIn}>\n      <p className='warning'></p>\n      <label>Email</label>\n      <input name='email' type='email' required />\n      <label>Password</label>\n      <input name='password' type='password' required/>\n      <button className='btn' type='submit'>Login</button>\n    </form>\n  );\n};\n\nexport default Login;","const userFactory = (displayName, email) => {\n  return ({\n    displayName: displayName,\n    email: email,\n    groups: [],\n    likes: [],\n    hates: []\n  });\n};\n\nexport default userFactory;","import '../styles/SignUp.css';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { Redirect } from 'react-router-dom';\nimport userFactory from '../scripts/userFactory';\n\nconst SignUp = (props) => {\n\n  if (props.user) {\n    return <Redirect to='/' />;\n  };\n  \n  let user;\n\n  const checkIfUniqueUserName = (name) => {\n    let arr = [];\n    return firebase.firestore().collection('users').get().then((querySnapShot) => {\n      querySnapShot.docs.forEach((doc) => {\n        arr.push(doc.data().displayName.toLowerCase());\n      });\n    }).then(() => {\n      return !arr.includes(name);\n    })\n  };\n\n  const checkCharacters = (e) => {\n    const warning = document.querySelector('.warning');\n    const button = document.querySelector('.submit-btn');\n    if (e.target.value.includes(' ')) {\n      warning.textContent = 'Username cannot contain spaces';// Not supposed to manipulate DOM\n      button.disabled = true;\n    } else {\n      warning.textContent = '';// Not supposed to manipulate DOM\n      button.disabled = false;\n    };\n  };\n\n  const makeAccount = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    const displayName = form[0].value;\n    const email = form[1].value;\n    const password = form[2].value;\n\n    checkIfUniqueUserName(displayName.toLowerCase()).then((result) => {\n      if (result) {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n          .then((userCredential) => {\n            user = userCredential.user;\n            user.updateProfile({\n              displayName: displayName\n            }).then(() => {\n              props.setUser(user);\n            });\n          }).catch((error) => {\n            const warning = form.querySelector('.warning');\n            warning.textContent = error.message;// Not supposed to manipulate dom\n          }).then(() => {\n            const newUser = userFactory(displayName, email);\n            props.setUserRef(newUser);\n            firebase.firestore().collection('users').doc(displayName).set(\n              newUser\n            );\n          }).then(() => {\n            firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\n          }).catch(function (error) {\n            console.log(error);\n          });\n      } else {\n        const warning = form.querySelector('.warning');// Not supposed to manipulate DOM\n        warning.textContent = 'User name already exists';\n      };\n    });\n  };\n  \n  return (\n    <form className='sign-up-form' onSubmit={makeAccount}>\n      <p className='warning'></p>\n      <label>Display Name</label>\n      <input onChange={checkCharacters} name='displayName' type='text' required />\n      <label>Email</label>\n      <input name='email' type='email' required />\n      <label>Password</label>\n      <input name='password' type='password' minLength='6' required/>\n      <button className='submit-btn btn' type='submit'>Create Account</button>\n    </form>\n  );\n};\n\nexport default SignUp;","export default __webpack_public_path__ + \"static/media/up-arrow.ce2a961f.png\";","export default __webpack_public_path__ + \"static/media/up-arrow-liked.1a60e50e.png\";","export default __webpack_public_path__ + \"static/media/down-arrow.5b3d4053.png\";","export default __webpack_public_path__ + \"static/media/down-arrow-hate.05414a6f.png\";","const formatTime = (time) => {\n\n  if (time > 2629800000) {\n    return `${Math.floor(time / 2629800000)} months ago`;\n  }else if (time > 86400000) {\n    return `${Math.floor(time / 86400000)} day(s) ago`\n  }else if (time > 3600000) {\n    return `${Math.floor(time / 3600000)} hrs ago`\n  }else if (time > 60000) {\n    return `${Math.floor(time / 60000)} min ago`\n  } else {\n    return 'Just now'\n  }\n\n};\n\nexport default formatTime;","import upArrow from '../media/up-arrow.png';\nimport UpArrowLiked from '../media/up-arrow-liked.png';\nimport downArrow from '../media/down-arrow.png';\nimport downArrowHate from '../media/down-arrow-hate.png';\nimport formatTime from '../scripts/formatTime';\nimport '../styles/Comment.css';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst Comment = (props) => {\n  \n  const [likes, setLikes] = useState(props.comment.likes);\n  const [liked, setLiked] = useState(false);\n  const [hated, setHated] = useState(false);\n\n  const timeNow = new Date().getTime();\n\n  const UpVote = () => {\n  \n    if (props.userRef && !props.userRef.likes.includes(props.id)) {\n      // find post in DB and up the score 1 point.\n      let tempComment = JSON.parse(JSON.stringify(props.allComments[props.id]));\n      tempComment.likes = likes + 1;\n      firebase.firestore().collection('comments').doc(props.id)\n        .set(tempComment);\n      setLikes(likes + 1);\n\n      // This updates allComments in App\n      let tempAllComments = JSON.parse(JSON.stringify(props.allComments));\n      tempAllComments[props.id] = tempComment;\n      props.setAllComments(tempAllComments);\n\n      // add like with ref to post\n      const tempUser = JSON.parse(JSON.stringify(props.userRef));\n      tempUser.likes.push(props.id);\n      if (tempUser.hates.includes(props.id)) {\n        tempUser.hates = tempUser.hates.filter((x) => x !== props.id);\n      };\n      props.setUserRef(tempUser);\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      setLiked(true);\n      setHated(false);\n      // setCommentPoints is to update total points on user page\n      if (props.setCommentPoints) {\n        props.setCommentPoints(props.commentPoints + 1);\n      };\n    };\n  };\n\n  const downVote = () => {\n    if (props.userRef && !props.userRef.hates.includes(props.id)) {\n      let tempComment = JSON.parse(JSON.stringify(props.allComments[props.id]));\n      tempComment.likes = likes - 1;\n      firebase.firestore().collection('comments').doc(props.id)\n        .set(tempComment);\n      setLikes(likes - 1);\n\n      // This updates allComments in App\n      let tempAllComments = JSON.parse(JSON.stringify(props.allComments));\n      tempAllComments[props.id] = tempComment;\n      props.setAllComments(tempAllComments);\n\n      // add hate with ref to post\n      const tempUser = JSON.parse(JSON.stringify(props.userRef));\n      tempUser.hates.push(props.id);\n      if (tempUser.likes.includes(props.id)) {\n        tempUser.likes = tempUser.likes.filter((x) => x !== props.id);\n      };\n      props.setUserRef(tempUser);\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      setHated(true);\n      setLiked(false);\n      // setCommentPoints is to update total points on user page\n      if (props.setCommentPoints) {\n        props.setCommentPoints(props.commentPoints - 1);\n      };\n    };\n  };\n\n  useEffect(() => {\n    if (props.userRef) {\n      setLiked(props.userRef.likes.includes(props.id));\n      setHated(props.userRef.hates.includes(props.id));\n    };\n  }, [props.userRef, props.id]);\n\n  return (\n    <div data-id={props.id} className='comment'>\n      <div className='left-margin'>\n        <button onClick={UpVote} className='upVoteBtn vote-btn'>\n          {\n            (liked &&\n              <img className='up-arrow-img' src={UpArrowLiked} alt='orange-up-arrow' />) ||\n            <img className='up-arrow-img' src={upArrow} alt='up-arrow' />\n          }\n        </button>\n        {likes}\n        <button onClick={downVote} className='down-vote-button vote-btn'>\n          {\n            (hated && \n              <img className='down-arrow-img' src={downArrowHate} alt='blue-down-arrow' />) ||\n              <img className='down-arrow-img' src={downArrow} alt='down-arrow' />\n          }\n        </button>\n      </div>\n      <div className='comment-content'>\n        <div className='comment-header'>\n          {`Posted by: `}\n          <Link to={`/user/${props.comment.user}`}>{props.comment.user}</Link>\n          {` - ${formatTime(timeNow - props.comment.timestamp)}`}\n        </div>\n        <div className='comment-body'>\n          {props.comment.content}\n        </div>\n      </div>  \n    </div>\n  );\n};\n\nexport default Comment;","const commentFactory = (user, content, post) => {\n  const time = new Date().getTime();\n  return (\n    {\n      content: content,\n      likes: 0,\n      timestamp: time,\n      user: user,\n      post: post\n    }\n  )\n\n};\n\nexport default commentFactory;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport '../styles/Post.css';\nimport upArrow from '../media/up-arrow.png';\nimport upArrowLiked from '../media/up-arrow-liked.png';\nimport downArrow from '../media/down-arrow.png';\nimport downArrowHate from '../media/down-arrow-hate.png';\nimport formatTime from '../scripts/formatTime';\nimport Comment from './Comment';\nimport commentFactory from '../scripts/commentFactory';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Post = (props) => {\n  \n  const [comments, setComments] = useState({});\n  const [likes, setLikes] = useState(props.post.likes);\n  const [liked, setLiked] = useState(false);\n  const [hated, setHated] = useState(false);\n  const [shouldDisplayComments, setShouldDisplayComments] = useState(false);\n\n  const UpVote = () => {\n    if (props.userRef && !props.userRef.likes.includes(props.id)) {\n      let tempPost = JSON.parse(JSON.stringify(props.allPosts[props.id]));\n      tempPost.likes = likes + 1;\n      firebase.firestore().collection('posts').doc(props.id)\n        .set(tempPost);\n      setLikes(likes + 1);\n\n      // This updates allPosts in App\n      let tempAllPosts = JSON.parse(JSON.stringify(props.allPosts));\n      tempAllPosts[props.id] = tempPost;\n      props.setAllPosts(tempAllPosts);\n\n      // add like with ref to post\n      const tempUser = JSON.parse(JSON.stringify(props.userRef));\n      tempUser.likes.push(props.id);\n      if (tempUser.hates.includes(props.id)) {\n        tempUser.hates = tempUser.hates.filter((x) => x !== props.id);\n      };\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      setLiked(true);\n      setHated(false);\n      props.setUserRef(tempUser);\n      // setPostPoints is to update total points on user page\n      if (props.setPostPoints) {\n        props.setPostPoints(props.postPoints + 1);\n      };\n    };\n  };\n\n  const downVote = () => {\n    if (props.userRef && !props.userRef.hates.includes(props.id)) {\n      let tempPost = JSON.parse(JSON.stringify(props.allPosts[props.id]));\n      tempPost.likes = likes - 1;\n      firebase.firestore().collection('posts').doc(props.id)\n        .set(tempPost);\n      setLikes(likes - 1);\n\n      // This updates the allPosts in App\n      let tempAllPosts = JSON.parse(JSON.stringify(props.allPosts));\n      tempAllPosts[props.id] = tempPost;\n      props.setAllPosts(tempAllPosts);\n\n\n      const tempUser = JSON.parse(JSON.stringify(props.userRef));\n      tempUser.hates.push(props.id);\n      if (tempUser.likes.includes(props.id)) {\n        tempUser.likes = tempUser.likes.filter((x) => x !== props.id);\n      };\n      props.setUserRef(tempUser);\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      setHated(true);\n      setLiked(false);\n      props.setUserRef(tempUser);\n      // setPostPoints is to update total points on user page\n      if (props.setPostPoints) {\n        props.setPostPoints(props.postPoints - 1);\n      };\n    };\n  };\n\n  const displayComments = () => {\n    setShouldDisplayComments(!shouldDisplayComments);\n  };\n\n  const createNewComment = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    const newComment = commentFactory(props.userRef.displayName, form[0].value, props.id);\n    let id;\n    e.target.children[0].value = '';\n    firebase.firestore().collection('comments').add(newComment).then((doc) => {\n      id = doc.id;\n    }).then(() => {\n      props.setAllComments(prevState => ({\n        ...prevState,\n        [id]: newComment\n      }));\n    });\n  };\n\n  const timeNow = new Date().getTime();\n\n  useEffect(() => {\n    \n    Object.keys(props.allComments).forEach(key => {\n      if (props.allComments[key].post === props.id) {\n        setComments(prevState => ({\n          ...prevState,\n          [key]: props.allComments[key]\n        }));\n      };\n    });\n\n    if (props.userRef) {\n      setLiked(props.userRef.likes.includes(props.id));\n      setHated(props.userRef.hates.includes(props.id));\n    };\n  }, [props.id, props.userRef, props.allComments]);\n\n  return (\n    <div data-id={props.id} className='post'>\n      <div className='left-margin'>\n        <button onClick={UpVote} className='upVoteBtn vote-btn'>\n          {\n            (liked &&\n              <img className='up-arrow-img' src={upArrowLiked} alt='orange-up-arrow' />) ||\n            <img className='up-arrow-img' src={upArrow} alt='up-arrow' />\n          }\n        </button>\n        {likes}\n        <button onClick={downVote} className='down-vote-button vote-btn'>\n          {\n            (hated && \n              <img className='down-arrow-img' src={downArrowHate} alt='blue-down-arrow' />) ||\n              <img className='down-arrow-img' src={downArrow} alt='down-arrow' />\n          }\n        </button>\n      </div>\n      <div className='post-content'>\n        <div className='post-header'>\n          {'Posted by: '}\n          <Link to={`/user/${props.post.user}`}>{props.post.user}</Link> \n          {` - ${formatTime(timeNow - props.post.timestamp)} - in `}\n          <Link to={`/groups/${props.post.group}`}>{props.post.group}</Link>\n        </div>\n        <div className='post-title'>\n          {props.post.title}\n        </div>\n        <div className='post-body'>\n          {props.post.content}\n          {\n            props.post.image &&\n            <a href={props.post.image} target='_blank' rel=\"noreferrer\">\n              <img className='post-img' src={props.post.image} alt={props.post.title} />\n            </a>\n          }\n        </div>\n        <div className='post-footer'>\n          <button onClick={displayComments}>{Object.keys(comments).length} comments</button>\n        </div>\n        {\n          shouldDisplayComments && props.userRef &&\n          <div className='comments'>\n              <form className='comment-form' onSubmit={createNewComment}>\n                <textarea required placeholder='Your thoughts...' />\n                <button className='submit-comment'>Save</button>\n              </form>            \n          </div>\n        }\n        { shouldDisplayComments &&\n              Object.keys(comments).map((key) => {\n                return <Comment\n                  key={key}\n                  comment={comments[key]}\n                  id={key}\n                  userRef={props.userRef}\n                  setUserRef={props.setUserRef}\n                  allComments={props.allComments}\n                  setAllComments={props.setAllComments}\n                  setCommentPoints={props.setCommentPoints}\n                />\n              })\n            }\n      </div>  \n    </div>\n  );\n\n};\n\nexport default Post;","const postFactory = (user, title, content, group, image) => {\n  const time = new Date().getTime();\n  return (\n    {\n      content: content,\n      group: group,\n      likes: 0,\n      timestamp: time,\n      title: title,\n      user: user,\n      image: image\n    }\n  )\n\n};\n\nexport default postFactory;","import '../styles/Feed.css';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport Post from './Post';\nimport postFactory from '../scripts/postFactory';\nimport { Link } from 'react-router-dom';\n\nconst Feed = (props) => {\n\n  const [posts, setPosts] = useState({});\n  const [groups, setGroups] = useState({});\n  const [shouldDisplayForm, setShouldDisplayForm] = useState(false);\n  const [shouldDisplayPicForm, setShouldDisplayPicForm] = useState(false);\n\n  const displayForm = () => {\n    setShouldDisplayForm(true);\n  };\n\n  const displayPicForm = () => {\n    setShouldDisplayPicForm(true);\n  };\n\n  const doNotDisplayForm = () => {\n    setShouldDisplayForm(false);\n  };\n\n  const doNotDisplayPicForm = () => {\n    setShouldDisplayPicForm(false);\n  };\n\n  const createNewPost = (e) => {\n    e.preventDefault();\n    setShouldDisplayForm(false);\n    const form = e.target;\n    const newPost = postFactory(props.userRef.displayName, form[0].value, form[1].value, form[2].value, null);\n    let id;\n    firebase.firestore().collection('posts').add(newPost).then((doc) => {\n      id = doc.id;\n    }).then(() => {\n      props.setAllPosts(prevState => ({\n        ...prevState,\n        [id]: newPost\n      }));\n    });\n  };\n  \n  const checkDataSize = (e) => {\n    if (e.target.files[0].size > 2000000) {\n      document.querySelector('.file-uploader').style = 'border: 1px solid red; color: red;';\n      document.querySelector('.pic-submit-btn').disabled = true;\n    } else {\n      document.querySelector('.file-uploader').style = 'border: none; color: black;';\n      document.querySelector('.pic-submit-btn').disabled = false;\n    };\n  };\n\n  const createPicNewPost = (e) => {\n    e.preventDefault();\n    setShouldDisplayPicForm(false);\n    const form = e.target;\n    // Create ref\n    const img = firebase.storage().ref().child(form[1].files[0].name);\n    // store it\n    img.put(form[1].files[0]).then(() => {\n      img.getDownloadURL().then((url) => {\n        const newPost = postFactory(props.userRef.displayName, form[0].value, null, form[2].value, url);\n        let id;\n        firebase.firestore().collection('posts').add(newPost).then((doc) => {\n            id = doc.id;\n          }).then(() => {\n            props.setAllPosts(prevState => ({\n              ...prevState,\n              [id]: newPost\n          }));\n        });\n      });  \n    });\n  };\n \n  useEffect(() => {\n    let tempPosts = {};\n    if (props.group) {\n      if (props.group === 'all') {\n        tempPosts = JSON.parse(JSON.stringify(props.allPosts));\n      } else {\n        Object.keys(props.allPosts).forEach(key => {\n          if (props.allPosts[key].group === props.group) {\n            tempPosts[key] = props.allPosts[key];\n          };\n        });\n      };\n    } else {\n      if (!props.userRef) {\n        tempPosts = JSON.parse(JSON.stringify(props.allPosts));\n      } else {\n        Object.keys(props.allPosts).forEach(key => {\n          if (props.userRef.groups.includes(props.allPosts[key].group)) {\n            tempPosts[key] = props.allPosts[key];\n          };\n        });        \n      };\n    };\n    if (Object.keys(tempPosts).length < 1 && !props.group) {\n        const joinPost = postFactory('Readit', 'Join more groups to add to your feed', <Link to='/groups'>Join Groups</Link>, 'Feed');\n        tempPosts['join'] = joinPost;\n      } else if (Object.keys(tempPosts).length < 1 && props.group) {\n        const firstPost = postFactory('Readit', 'Be the first to post here', ' ', props.group);\n        tempPosts['first'] = firstPost;\n      };\n    setPosts(tempPosts);\n  }, [props.allPosts, props.group, props.userRef]);\n\n  useEffect(() => {\n    setGroups(props.allGroups);\n  }, [props.allGroups]);\n\n  return (\n    <div className='container'>\n      <div className='feed'>\n        {\n          Object.keys(posts).map((key) => {\n            return <Post\n              key={key}\n              post={posts[key]}\n              id={key}\n              userRef={props.userRef}\n              setUserRef={props.setUserRef}\n              allPosts={props.allPosts}\n              setAllPosts={props.setAllPosts}\n              allComments={props.allComments}\n              setAllComments={props.setAllComments}\n            />\n          })\n        }\n      </div>\n      <div className='right-column'>\n        {\n          props.userRef &&\n          <button onClick={displayForm}className='add-post-btn'>Submit new text post</button>                 \n        }\n        {\n          props.userRef &&\n          <button onClick={displayPicForm} className='add-post-btn'>Submit new image post</button>\n        }\n      </div>\n      {\n        shouldDisplayForm &&\n        <form className='post-form' onSubmit={createNewPost}>\n          <input required placeholder='Enter your title' />\n          <textarea required className='content' placeholder='Enter your content' />\n          <select required name='groups'>\n            <option value=''>--Choose a group</option>\n            {\n              ((!props.group || props.group === 'all') &&\n              (\n                Object.keys(groups).map((group) => {\n                  return <option key={group} value={group}>{group}</option>\n                })\n              )) ||\n              <option value={props.group}>{props.group}</option>\n            }\n          </select>\n          <button>Submit</button>\n          <button className='close-form' onClick={doNotDisplayForm}>x</button>\n        </form>\n      }\n      {\n        shouldDisplayPicForm &&\n        <form className='post-form' onSubmit={createPicNewPost}>\n          <input required placeholder='Enter your title' />\n          <div className='file-uploader'>\n            <input onChange={checkDataSize} type='file' accept='.png, .jpeg, .jpg, .gif' />\n            Max size: 2MB\n          </div>\n          <select required name='groups'>\n            <option value=''>--Choose a group</option>\n            {\n              ((!props.group || props.group === 'all') &&\n              (\n                Object.keys(groups).map((group) => {\n                  return <option key={group} value={group}>{group}</option>\n                })\n              )) ||\n              <option value={props.group}>{props.group}</option>\n            }\n          </select>\n          <button className='pic-submit-btn'>Submit</button>\n          <button className='close-form' onClick={doNotDisplayPicForm}>x</button>\n        </form>\n      }\n    </div>\n  );\n};\n\nexport default Feed;","export default __webpack_public_path__ + \"static/media/404.a0396b78.png\";","import '../styles/User.css';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport Post from './Post';\nimport Comment from './Comment';\nimport error from '../media/404.png';\n\nconst User = (props) => {\n\n  const [doesUserExist, setDoesUserExist] = useState(true);\n  const [userPosts, setUserPosts] = useState({});\n  const [userComments, setUserComments] = useState({});\n  const [postPoints, setPostPoints] = useState(0);\n  const [commentPoints, setCommentPoints] = useState(0);\n\n  const { name } = useParams();\n\n  const displayUser = (\n    <div>\n      <div className='user'>\n        <div className='image-placeholder'></div>\n        <p className='user-name'>{name}</p>\n        <p className='post-points'>Post points: {postPoints}</p>\n        <p className='comment-points'>Comment points: {commentPoints}</p>\n      </div>\n\n      <div className='feed'>\n        <div>Posts:</div>\n        {\n          Object.keys(userPosts).map((key) => {\n            return <Post\n              key={key}\n              post={userPosts[key]}\n              id={key}\n              allPosts={props.allPosts}\n              setAllPosts={props.setAllPosts}\n              allComments={props.allComments}\n              setAllComments={props.setAllComments}\n              userRef={props.userRef}\n              setUserRef={props.setUserRef}\n              postPoints={postPoints}\n              setPostPoints={setPostPoints}\n            />\n          })\n        }\n        Comments:\n        {\n          Object.keys(userComments).map((key) => {\n            return <Comment\n              key={key}\n              comment={userComments[key]}\n              id={key}\n              userRef={props.userRef}\n              setUserRef={props.setUserRef}\n              allComments={props.allComments}\n              setAllComments={props.setAllComments}\n              commentPoints={commentPoints}\n              setCommentPoints={setCommentPoints}\n            />\n          })\n        }\n      </div>\n    </div>\n  );\n  \n  // checks if user exists in DB\n  firebase.firestore().collection('users').doc(name).get()\n  .then((doc) => {\n    setDoesUserExist(!!doc.data());\n  });\n\n  useEffect(() => {\n    let tempPosts = {};\n    let tempPostPoints = 0;\n    Object.keys(props.allPosts).forEach(key => {\n      if (props.allPosts[key].user === name) {\n        tempPosts[key] = JSON.parse(JSON.stringify(props.allPosts[key]));\n        tempPostPoints += props.allPosts[key].likes;\n      };\n    });\n    // Lists all comments made by user\n    let tempComments = {};\n    let tempCommentPoints = 0;\n    Object.keys(props.allComments).forEach(key => {\n      if (props.allComments[key].user === name) {\n        tempComments[key] = JSON.parse(JSON.stringify(props.allComments[key]));\n        tempCommentPoints += props.allComments[key].likes;\n      };\n    });\n    setUserPosts(tempPosts);\n    setUserComments(tempComments);\n    setPostPoints(tempPostPoints);\n    setCommentPoints(tempCommentPoints);\n  }, [name, props.allPosts, props.allComments, props.userRef]);\n\n  return (\n    <div className='user-container'>\n      {(doesUserExist && displayUser) || <img src={error} alt='user not found'/>}    \n    </div>\n  );\n};\n\nexport default User;","import Feed from './Feed';\nimport { useParams, Redirect } from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport '../styles/Group.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst Group = (props) => {\n\n  const { group } = useParams();\n\n  const [userGroups, setUserGroups] = useState([]);\n\n  const joinGroup = () => {\n    if (props.userRef) {\n      const groupName = group;\n      const tempUserGroups = userGroups;\n      tempUserGroups.push(groupName);\n      setUserGroups(tempUserGroups );\n      let tempUser = {\n        email: props.userRef.email,\n        displayName: props.userRef.displayName,\n        groups: tempUserGroups,\n        likes: props.userRef.likes,\n        hates: props.userRef.hates\n      };\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      props.setUserRef(tempUser);\n    } else {\n      alert('sign in first');// TEMP\n    };\n  };\n\n  const leaveGroup = () => {\n    if(props.userRef){\n      const groupName = group;\n      let tempUserGroups = userGroups;\n      tempUserGroups = tempUserGroups.filter((group) => { return group !== groupName })\n      setUserGroups(tempUserGroups);\n      let tempUser = {\n        email: props.userRef.email,\n        displayName: props.userRef.displayName,\n        groups: tempUserGroups,\n        likes: props.userRef.likes,\n        hates: props.userRef.hates\n      };\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      props.setUserRef(tempUser);\n    } else {\n      alert('sign in first');// TEMP\n    }\n  };\n\n  useEffect(() => {\n    if (props.userRef) {\n      setUserGroups(props.userRef.groups)\n    }; \n  }, [props.userRef]);\n\n  if (!Object.keys(props.allGroups).includes(group) && group !== 'all') {\n    return <Redirect to='/404' />\n  };\n  \n  return (\n    <div className='group'>\n      <h1 className='page-title'>{group}</h1>\n      {\n        group !== 'all' &&\n        ((userGroups.includes(group) &&\n          <button className='leave-group-btn' onClick={leaveGroup}>Leave</button>) ||\n          <button className='join-group-btn' onClick={joinGroup}>Join</button>)\n      }\n      <Feed\n        group={group}\n        userRef={props.userRef}\n        setUserRef={props.setUserRef}\n        allGroups={props.allGroups}\n        allPosts={props.allPosts}\n        setAllPosts={props.setAllPosts}\n        allComments={props.allComments}\n        setAllComments={props.setAllComments}\n      />\n    </div>\n  );\n};\n\nexport default Group;","import '../styles/Groups.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Groups = (props) => {\n\n  const [userGroups, setUserGroups] = useState({ groups: [] });\n  const [shouldDisplayForm, setShouldDisplayForm] = useState(false);\n  \n  const joinGroup = (e) => {\n    if (props.userRef) {\n      const groupName = e.target.parentNode.parentNode.dataset.name;\n      const tempUserGroups = userGroups.groups;\n      tempUserGroups.push(groupName);\n      setUserGroups({ groups: tempUserGroups });\n      let tempUser = {\n        email: props.userRef.email,\n        displayName: props.userRef.displayName,\n        groups: tempUserGroups,\n        likes: props.userRef.likes,\n        hates: props.userRef.hates\n      };\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      props.setUserRef(tempUser);\n    } else {\n      alert('sign in first');// TEMP\n    };\n  };\n\n  const leaveGroup = (e) => {\n    if(props.userRef){\n      const groupName = e.target.parentNode.parentNode.dataset.name;\n      let tempUserGroups = userGroups.groups;\n      tempUserGroups = tempUserGroups.filter((group) => { return group !== groupName })\n      setUserGroups({ groups: tempUserGroups });\n      let tempUser = {\n        email: props.userRef.email,\n        displayName: props.userRef.displayName,\n        groups: tempUserGroups,\n        likes: props.userRef.likes,\n        hates: props.userRef.hates\n      };\n      firebase.firestore().collection('users').doc(props.userRef.displayName)\n        .set(tempUser);\n      props.setUserRef(tempUser);\n    } else {\n      alert('sign in first');// TEMP\n    };\n  };\n\n  const displayForm = () => {\n    setShouldDisplayForm(true);\n  };\n\n  const closeForm = () => {\n    setShouldDisplayForm(false);\n  };\n\n  const createGroup = (e) => {\n    e.preventDefault();\n    const groupName = e.target[0].value.toLowerCase();\n    const groupDescription = e.target[1].value;\n    if (!Object.keys(props.allGroups).includes(groupName)) {\n      // Shouldn't manipulate DOM\n      if (groupName.includes(' ')) {\n        // Not supposed to manipulate DOM\n        document.querySelector('.warning').textContent = 'No spaces allowed in name';\n      } else {\n        firebase.firestore().collection('groups').doc(groupName).set({\n          description: groupDescription\n        }).then(() => {\n          setShouldDisplayForm(false);\n          props.setAllGroups(prevState => ({\n            ...prevState,\n            [groupName]: {\n              description: groupDescription\n            }\n          }));\n        });\n      };\n    } else {// TEMP - not supposed to manipulate DOM\n      document.querySelector('.warning').textContent = 'Group already exists';\n    };\n  };\n\n  useEffect(() => {\n    if (props.userRef) {\n      setUserGroups({ groups: props.userRef.groups });\n    };\n  }, [props.userRef]);\n\n  return (\n    <div className='groups-container'>\n      <div className='page-title'>\n        GROUPS\n      </div>\n      <div className='list-container'>\n        <ul className='groups-list'>\n          {\n            Object.keys(props.allGroups).map((key) => {\n              return (\n                <li key={key} data-name={key} className='group-item' >\n                  <div className='group-header'>\n                    {\n                      (userGroups.groups.includes(key) &&\n                        <button className='leave-group-btn' onClick={leaveGroup}>Leave</button>) ||\n                      <button className='join-group-btn' onClick={joinGroup}>Join</button>\n                    }\n                    <Link to={`/groups/${key}`}>{key}</Link>\n                  </div>\n                  <div className='group-description'>\n                    {props.allGroups[key].description}\n                  </div>\n                </li>\n              );\n            })\n          }\n        </ul>\n        <div className='right-column'>\n          {\n            props.userRef &&\n            <button className='create-group-btn' onClick={displayForm}>Create your own group</button>\n          }\n        </div>\n      </div>\n      {\n        shouldDisplayForm &&\n        <form className='create-group-form' onSubmit={createGroup}>\n          <div onClick={closeForm}className='close-form'>X</div>\n          <h1>Create your group</h1>\n          <div>\n            <div className='warning'></div>\n            <label>Group name</label>\n            <input required maxLength='20' placeholder='Group name...' />\n          </div>\n          <div>\n            <label>Group description</label>\n            <textarea required minLength='5' maxLength='150' placeholder='Enter description' />\n          </div>\n          <button>submit</button>\n        </form>\n      }\n    </div>\n  );\n};\n\nexport default Groups;","import '../styles/PageNotFound.css';\nimport error from '../media/404.png';\n\nconst PageNotFound = () => {\n  return (\n    <img className='error-image' src={error} alt='404 error' />\n  )\n};\n\nexport default PageNotFound;","import './styles/App.css';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Feed from './components/Feed';\nimport User from './components/User';\nimport Group from './components/Group';\nimport Groups from './components/Groups';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport PageNotFound from './components/PageNotFound';\n\nfunction App() {\n\n  let initialUser;\n\n  if (sessionStorage.length < 1) {\n    initialUser = null;\n  } else {\n    initialUser = JSON.parse(sessionStorage[Object.keys(sessionStorage)[0]]);\n  };\n\n  const [user, setUser] = useState(initialUser);\n  const [userRef, setUserRef] = useState(null);\n  const [allPosts, setAllPosts] = useState({});\n  const [allGroups, setAllGroups] = useState({});\n  const [allComments, setAllComments] = useState({});\n\n  useEffect(() => {\n    if (user) {\n      firebase.firestore().collection('users').doc(user.displayName).get().then((doc) => {\n        setUserRef(doc.data());\n      });\n    };\n  }, [user]);\n\n  useEffect(() => {\n    let posts = {};\n    let comments = {};\n    let groups = {};\n    // Get all posts from DB\n    firebase.firestore().collection('posts').get().then((querySnapShot) => {\n      querySnapShot.forEach((x) => {\n        posts[x.id] = x.data();\n      });\n      setAllPosts(posts);\n    });\n\n    // Get all comments from DB\n    firebase.firestore().collection('comments').get().then((querySnapShot) => {\n      querySnapShot.forEach((x) => {\n        comments[x.id] = x.data();\n      });\n      setAllComments(comments);\n    });\n\n    // Get all groups from DB\n    firebase.firestore().collection('groups').get().then((querySnapShot) => {\n      querySnapShot.forEach(x => {\n        groups[x.id] = {\n          description: x.data().description\n        };\n      });\n      setAllGroups(groups);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header user={user} setUser={setUser} userRef={userRef} />\n        <Switch>\n          <Route exact path='/' render={() => <Feed\n            userRef={userRef}\n            setUserRef={setUserRef}\n            allPosts={allPosts}\n            setAllPosts={setAllPosts}\n            allGroups={allGroups}\n            allComments={allComments}\n            setAllComments={setAllComments}\n          />} />\n          <Route exact path='/login' render={() => <Login\n            user={user}\n            setUser={setUser}\n          />} />\n          <Route exact path='/signup' render={() => <SignUp\n            user={user}\n            setUser={setUser}\n            setUserRef={setUserRef}\n          />} />\n          <Route exact path='/user/:name' render={() => <User\n            userRef={userRef}\n            setUserRef={setUserRef}\n            allPosts={allPosts}\n            setAllPosts={setAllPosts}\n            allComments={allComments}\n            setAllComments={setAllComments}\n          />} />\n          <Route exact path='/groups/:group' render={() => <Group\n            userRef={userRef}\n            setUserRef={setUserRef}\n            allGroups={allGroups}\n            allPosts={allPosts}\n            setAllPosts={setAllPosts}\n            allComments={allComments}\n            setAllComments={setAllComments}\n          />} />\n          <Route exact path='/groups' render={() => <Groups\n            userRef={userRef}\n            setUserRef={setUserRef}\n            allGroups={allGroups}\n            setAllGroups={setAllGroups}\n          />} />\n          <Route path='*' render={() => <PageNotFound />} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;","import './styles/index.css';\nimport './styles/reset.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDrSeIcoMoV-mP6jJy_j0oOIueeaEmTLbQ\",\n  authDomain: \"readit-c4bfd.firebaseapp.com\",\n  projectId: \"readit-c4bfd\",\n  storageBucket: \"readit-c4bfd.appspot.com\",\n  messagingSenderId: \"684668365048\",\n  appId: \"1:684668365048:web:6d6c902edc5fbb1aaf730d\"\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}